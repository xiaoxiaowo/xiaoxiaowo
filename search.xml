<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[函数式编程入门教程]]></title>
    <url>%2F2018%2F09%2F23%2Ftest%2F</url>
    <content type="text"><![CDATA[与面向对象编程（Object-oriented programming）和过程式编程（Procedural programming）并列的编程范式。 最主要的特征是，函数是第一等公民。 强调将计算过程分解成可复用的函数，典型例子就是map方法和reduce方法组合而成 MapReduce 算法。 只有纯的、没有副作用的函数，才是合格的函数。]]></content>
      <tags>
        <tag>技术栈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《软技能——代码之外的生存指南》]]></title>
    <url>%2F2018%2F09%2F23%2Fdemo%2F</url>
    <content type="text"><![CDATA[如何对待上班这件事情？把自己当做一个软件企业，把雇主当做企业的一个客户，你应当能够提供某种产品或者服务（把一个想法通过技术手段变成一个产品的能力），不断提升你的服务质量，专注于为某一类客户提供特定的服务，做好自我营销，为更多更优质的雇主服务。 如何注意人际关系？不是教你搞办公室政治，而是让你在这上面少踩坑。书中有句话比较经典：“一旦你贬低他人，削弱他们的成就感，在某种程度上就如同切断了他们的氧气补给，获得的回馈将完全是抓狂和绝望”。 所以切记不要贬低他人，而是应该多激励学会聚精会神地聆听，并指出问题所在以及相关解决方案在小事情上放弃立场或承认错误有时候能为你赢得意想不到的尊重 如何搞定面试？作者的观点并不新颖，但是的确这种方式最有效，同时也说明了其他方式的不靠谱！找人内推即便不换工作也要多面试增加面试经验 技术做到什么程度？是一个方向钻到底，还是什么都搞？一门技术钻的越深，潜在的机会就会越少，但获得这些工作机会的可能性就越大。所以我觉得规划好自己的技术栈很有必要，总体来说一专多能可能会好一些。永远不要陷入对技术的狂热之中，只要明白不同的场景需要不同的技术方案解决就行！ 如何晋升？承担更多的责任做了事情要及时反馈给上面，上面不知道一切都是徒劳提升自己的技能不是提出问题，而是解决问题，相信一切问题都可以解决 如何创业？要利用业余时间做起来，后期到一定阶段再辞职也不迟，不仅降低了风险，还提高了成功率。创业要从小处着手，也就是朝着某个独角兽方向发展，比如国内的Face++，就是只做人脸识别算法。 技术人员如何自我营销？写博客社交媒体演讲、培训别人写书 如何学习？培养自学能力筛选出重点，快速突破动手实践才是王道 如何管好自己？中国的教育模式导致我们基本上都是靠外部因素来左右我们的行为，很少有自我驱动型。良好的生活习惯是自律的有效保证，所以从现在开始让自己的生活变得井然有序，培养起自己的生活习惯！改掉坏习惯，培养好习惯，把大的目标转换为一个个小的计划！ 时间去哪了？看手机推送的所谓新闻（实际上都是毫无营养的标题党）看视频沉迷于刷社交软件 为何你总是逃避努力工作？努力工作——&gt;辛苦——&gt;有价值的东西——&gt;带来的幸福感持久偷懒——&gt;愉悦——&gt;消费价值的东西——&gt;带来的幸福感短暂 要不要健身？每天必须健身，每天必须健身，每天必须健身！ 剩下的其他没说的东西要么不是干货，要么不适合中国国情，虽然书名是软技能，但是这些东西从长远来看远胜于技术硬技能本身，这些东西均是在长期的工作生活中潜移默化的，非一日之寒，仅仅知道肯定不行，慢慢践行才是根本，软技能培养好了，自然就转化为了硬技能！]]></content>
      <categories>
        <category>人生感悟</category>
      </categories>
      <tags>
        <tag>软技能</tag>
      </tags>
  </entry>
</search>
